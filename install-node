#!/bin/bash
# install-node 
# Chris Patton for QRAAT
# ~7 Aug 2013


# Mount point for QRAAT installation.
TARGET_DIR=/tmp/primary

# Location of file system tarball and file patches. 
STAGING_DIR=$(pwd) 

function help(){
  cat <<!EOF!

usage: install.sh [-h,--fs-type] --site-no
                  --target-disk                *OR*
                  --primary-part --swap-part

  This script installs the QRAAT-node software distribution 
  to the destination disk. This includes the Ubuntu Server 
  12.04 i386 operating system, GNU Radio, our software, and
  some customizations for running this node in a QRAAT
  deployment. WARNING: As this script writes a new partition
  table and master boot record, be sure to back up any
  important data.

    --site-no=N               Site number for the target machine. 

    --fs-type=TYPE            Filesystem type to use for main installation
                              partition. (Default is 'ext2'.) 

     -h                       Print this help.

  There are two ways to install QRAAT. Specifying the target 
  disk will automatically partition the disk: 

    --target-disk=/dev/sdK    Destination disk for QRAAT installation. 
                              This will override the partition table and 
                              master boot record, e.g. '/dev/sda'. 

  Alternatively, specifying the primary partition and the swap 
  space will prevent the partition table from being overwritten. 
  Note that the partitions will be formatted:

    --primary-part=/dev/sdKI  K is the disk and I is the partition, e.g 
                              '/dev/sda1'. Must be atleast 1 GB. 
    
    --swap-part=/dev/sdKJ     Swap partition must be at least 128 MB. 

!EOF!
}

function mount_primary() {
  echo -e "\033[1minstall-node: mounting the primary installation partition.\033[0m"
  mkdir -p $TARGET_DIR 
  mount $PRIMARY_PART $TARGET_DIR
}

function umount_primary() {
  echo -e "\033[1minstall-node: unmounting the primary partition.\033[0m"
  umount $TARGET_DIR
}


function setup_disk() {
  # Set up disk 
  if [ $TARGET_DISK ]
  then 
    echo -e  "\033[1minstall-node: You have opted automatically configure the disk.\033[0m"
    echo -e  "\033[1mWARNING: this will overwrite the partition table on $TARGET_DISK,\033[0m"
    echo -en "\033[1mcausing you to lose your data. Continue? [y/n] \033[0m" && read ans
    case $ans in 
      y|yes|YES|Y)
        # script fdisk to set up partitions. set PRIMARY_PART and SWAP_PART
        if [ -e $TARGET_DISK ]
        then
          echo "o
          n
          p
          2
          
          +512M
          n
          p
          1
          
          
      	  p
          w" | fdisk $TARGET_DISK
          PRIMARY_PART=${TARGET_DISK}1
          SWAP_PART=${TARGET_DISK}2
        else
          echo -e "\033[1merror (install-node): can't partition '$TARGET_DISK'; target doesn't exist.\033[0m" 1>&2 && exit 1  
        fi
      ;;

      *)
        echo -e "\033[1minstall-node: canceled.\033[0m" && exit 0
    esac
  fi

  # Format partitions. 
  if [ ! $PRIMARY_PART ] 
    then echo -e "\033[1merror (install-node): please specify the primary installation partition.\033[0m" 1>&2 && exit 1
  elif [ ! $SWAP_PART ] 
    then echo -e "\033[1merror (install-node): please specify the swap partition.\033[0m" 1>&2 && exit 1
  elif [ -e $PRIMARY_PART ] && [ -e $SWAP_PART ]
  then
    case $FS_TYPE in
      ext2|ext3|ext4)
        echo -ne "\033[1minstall-node: $PRIMARY_PART will be formatted as $FS_TYPE. Continue? [y/n] \033[0m" && read ans
        case $ans in 
          yes|YES|y|Y)
            mkfs.$FS_TYPE -L "qraat-main" $PRIMARY_PART
          ;;

          *)
            echo -e "\033[1minstall-node: cancelled.\033[0m" && exit 0
        esac
      ;;

      *)
        echo -e "\033[1merror (install-node): Unrecognized file system type '$FS_TYPE'.\033[0m" 1>&2 && exit 1
    esac

    echo -en "\033[1minstall-node: $SWAP_PART will be formatted as a swap partition. Continue? [y/n] \033[0m" && read ans
    case $ans in 
      yes|YES|y|Y)
        mkswap -L "qraat-swap" $SWAP_PART
      ;;

      *)
        echo -e "\033[1minstall-node: cancelled.\033[0m" && exit 0
      esac

  else
    echo -e "\033[1merror (install-node): the primary and/or swap partition doesn't exist.\033[0m" 1>&2 
    [[ $TARGET_DISK ]] && echo -e "\033[1merror (install-node): Autopartition failed. Try running fdisk manually.\033[0m" 1>&2
    exit 1
  fi
}

function copy_fs() {
  # Copy files system to primary partition and update grub. 
 
  echo -ne "\033[1minstall-node: calculating the size of the filesystem ... " 
  size=`awk -v m=$(zcat $STAGING_DIR/test.tgz | wc -c) 'BEGIN { print m / 1000000 }'`
  echo -ne "$size MB will be installed. Continue? [y,n] \033[0m" && read ans
  
  case $ans in 

    yes|YES|y|Y) 
      mount_primary
      echo -e "\033[1minstall-node: copying filesystem. This will take some time.\033[0m"
      sleep 1
      tar -xvpzf $STAGING_DIR/test.tgz -C $TARGET_DIR --numeric-owner
    ;;

    *)
      echo -e "\033[1minstall-node: cancelled.\033[0m" && exit 0

  esac

  echo -e "\033[1minstall-node: file transfer complete. Starting grub set up ... \033[0m"
  sleep 1
  #cd /
  #for f in dev dev/pts proc ; do 
  #  mount --bind /$f $TARGET_DIR/$f ; done
  #chroot $TARGET_DIR /bin/bash -c "dpkg-reconfigure grub-pc" #TODO

  umount_primary
}

function fs_fixups() {
  # Patch files, set hostname, update network interface
  mount_primary
  
  # Copy generic etc/fstab (just primary and swap partitions),
  # the network interface file, and other stuf. 
  #cp -R $STAGING_DIR/fixups/* $TARGET_DIR  #TODO 
  
  # Remove persistent udev rules.
  #rm -f $TARGET_DIR/etc/udev/rules.d/*-persistent*.rules (sp?) #TODO

  # Set hostname for target system. 
  #for file in '$TARGET_DIR/etc/hosts' '$TARGET_DIR/etc/hostnmae' ; do
  #  sed -i "s/qraat-N/qraat-$SITE_NO" $file ; done #TODO

  # Configure netowrk interfaces. 
  #sed -i "s/10.N/10.$SITE_NO/g" $TARGET_DIR/etc/network/interface #TODO

  # Set file system of primary partition in /etc/fstab. 
  #sed -i "s/fs-type/$FS_TYPE" $TARGET_DIR/etc/fstab #TODO
  sleep 1
  umount_primary
}



# Parse command line options.
FS_TYPE="ext2"
for opt in $@
do

  if [[ "$opt" == "-h" ]] 
  then
    help && exit 0

  elif [[ "$opt" =~ ^--([^=]*)=(.*)$ ]]
  then
    case ${BASH_REMATCH[1]} in

      site-no) 
        SITE_NO=${BASH_REMATCH[2]}
      ;;

      fs-type)
        FS_TYPE=${BASH_REMATCH[2]}
      ;;

      target-disk)
        TARGET_DISK=${BASH_REMATCH[2]}
      ;;

      primary-part)
        PRIMARY_PART=${BASH_REMATCH[2]}
      ;;

      swap-part) 
        SWAP_PART=${BASH_REMATCH[2]}
      ;;

      *)
        echo "error (install-node): '${BASH_REMATCH[1]} is not an option." 1>&2 && exit 1

    esac 

  else
    echo "error (install-node): argument '$opt' not recognized." 1>&2 && exit 1

  fi

done

# Check that the site number was specified. 
if [[ ! $SITE_NO ]]
  then echo "error (install-node): please specify the site number." 1>&2 && exit 1; fi

# Do install. 
#setup_disk
PRIMARY_PART="/dev/sdb1"
SWAP_PART="/dev/sdb2"
#copy_fs #TODO test grub install
fs_fixups
